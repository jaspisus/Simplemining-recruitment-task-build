{"version":3,"sources":["Components/Column/Column.js","Components/Question/QuestionContent.js","Components/Question/Question.js","Components/QuestionGroup/QuestionGroup.js","Components/SearchInput/SearchInput.js","App.js","index.js"],"names":["Column","side","data","className","groups","map","groupsElem","id","questions","filter","elem","groupId","length","header","name","QuestionContent","title","content","contentBox","useRef","useState","isUnFolded","setIsUnFolded","location","useLocation","showContent","url","current","style","height","scrollHeight","replace","friendlyfyUrl","handleFold","hideContent","useEffect","pathname","separator","indexOf","questionId","slice","console","log","render","history","onClick","ref","dangerouslySetInnerHTML","__html","Question","hashType","QuestionGroup","SearchInput","onSearch","onReset","inputRef","onSubmit","event","type","placeholder","App","rawData","setRawData","filteredData","setFilteredData","getFaqData","sortQuestions","forEach","sort","a","b","fetch","then","response","json","href","class","preventDefault","searchWords","value","toLowerCase","split","filteredQuestions","i","includes","rootElement","document","getElementById","String","prototype","this","replaceAll","ReactDOM"],"mappings":"uTAmBeA,MAdf,YAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACvB,OACC,yBAASC,UAAU,SAAnB,SACED,GACAA,EAAKE,OAAOH,GAAMI,KAAI,SAACC,EAAYC,GAClC,IAAMC,EAAYN,EAAKM,UAAUC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAYL,EAAWC,MAC5E,GAAIC,EAAUI,OAAS,EACtB,OAAO,cAAC,EAAD,CAAwBC,OAAQP,EAAWQ,KAAMN,UAAWA,GAAxCD,S,aC2ClBQ,MAjDf,YAAkD,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,QAASV,EAAM,EAANA,GACpCW,EAAaC,mBACnB,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,cAEXC,EAAc,SAAAC,GACnB,IAAMT,EAAUC,EAAWS,QAC3BV,EAAQW,MAAMC,OAASZ,EAAQa,aAAe,KAC9CJ,EAAIK,QAAJ,UAAexB,EAAf,YAAqBS,EAAMgB,mBAStBC,EAAa,SAAAP,GAClBJ,GAAeD,GACdA,EARkB,SAAAK,GACHR,EAAWS,QACnBC,MAAMC,OAAS,KACvBH,EAAIK,QAAQ,KAKqBG,CAAYR,GAA/BD,EAAYC,IAc3B,OAXAS,qBAAU,WACT,IAAMC,EAAWb,EAASa,SACpBC,EAAYD,EAASE,QAAQ,KAC7BC,EAAaH,EAASI,MAAM,EAAGH,GACrCI,QAAQC,IAAIH,GACRA,GAAchC,IACjBkB,IACAH,GAAc,MAEb,IAGF,sBAAKnB,UAAU,WAAf,UACC,cAAC,IAAD,CACCwC,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACP,sBAAKzC,UAAU,SAAS0C,QAAS,kBAAMZ,EAAWW,IAAlD,UACC,6BAAK5B,IACL,sBAAMb,UAAU,0BAAhB,SAA2CkB,EAAa,cAAgB,sBAI3E,qBAAKlB,UAAU,UAAU2C,IAAK5B,EAAY6B,wBAAyB,CAAEC,OAAQ/B,S,QCtCjEgC,MARf,YAA2C,IAAvBjC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,QAASV,EAAM,EAANA,GACnC,OACC,cAAC,IAAD,CAAQ2C,SAAU,UAAlB,SACC,cAAC,EAAD,CAAiBlC,MAAOA,EAAOC,QAASA,EAASV,GAAIA,O,MCUzC4C,MAXf,YAA+C,IAAtBtC,EAAqB,EAArBA,OAAQL,EAAa,EAAbA,UAChC,OACC,0BAASL,UAAU,qBAAnB,UACE,6BAAKU,IACLL,EAAUH,KAAI,SAACK,EAAMH,GAAP,OACd,cAAC,EAAD,CAAUS,MAAON,EAAKM,MAAgBC,QAASP,EAAKO,QAASV,GAAIG,EAAKH,IAApCA,U,MCavB6C,MApBf,YAA6C,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAC1BC,EAAWpC,mBAEjB,OACC,qBAAKhB,UAAU,eAAf,SACC,uBAAMqD,SAAU,SAAAC,GAAK,OAAIJ,EAASI,EAAOF,IAAzC,UACC,uBAAOT,IAAKS,EAAUG,KAAK,OAAOC,YAAY,WAC9C,sBAAKxD,UAAU,UAAf,UACC,wBAAQA,UAAU,oCAAoCuD,KAAK,SAA3D,oBAGA,wBAAQvD,UAAU,mCAAmCuD,KAAK,QAAQb,QAASS,EAA3E,4BCTU,SAASM,IACvB,MAA8BxC,qBAA9B,mBAAOyC,EAAP,KAAgBC,EAAhB,KACA,EAAwC1C,qBAAxC,mBAAO2C,EAAP,KAAqBC,EAArB,KAEA7B,qBAAU,WACT8B,MACE,IAEH,IAAMC,EAAgB,SAAAhE,GAOrB,MANA,CAAC,OAAQ,SAASiE,SAAQ,SAAAlE,GACzBC,EAAKE,OAAOH,GAAQC,EAAKE,OAAOH,GAAMmE,MAAK,SAACC,EAAGC,GAC9C,OAAOD,EAAE9D,GAAK+D,EAAE/D,SAIXL,GAGF+D,EAAa,WAClBM,MAAM,eACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtE,GACL4D,EAAW5D,GACX8D,EAAgBE,EAAchE,QAsBjC,OACC,sBAAKC,UAAU,MAAf,UACC,yBAAQA,UAAU,MAAlB,UACC,6BACC,oBAAGwE,KAAK,wCAAR,UACC,sBAAMC,MAAM,0BAAZ,kBACA,4CAGF,cAAC,EAAD,CAAavB,SA3BK,SAACI,EAAOF,GAC5BE,EAAMoB,iBAEN,IACMC,EADcvB,EAAS5B,QAAQoD,MAAMC,cACXC,MAAM,KAChCC,EAAoBrB,EAAQrD,UAAUC,QAAO,SAAAC,GAClD,IAAK,IAAIyE,EAAI,EAAGA,EAAIL,EAAYlE,OAAQuE,IAEvC,OADA1C,QAAQC,IAAIhC,GACLA,EAAKM,MAAMgE,cAAcI,SAASN,EAAYK,KAAOzE,EAAKO,QAAQ+D,cAAcI,SAASN,EAAYK,OAG9GnB,EAAgB,CAAE5D,OAAQyD,EAAQzD,OAAQI,UAAW0E,KAgBd5B,QAbpB,WACnBU,EAAgBE,EAAcL,UAc7B,uBAAM1D,UAAU,UAAhB,UACC,cAAC,EAAD,CAAQF,KAAK,OAAOC,KAAM6D,IAC1B,cAAC,EAAD,CAAQ9D,KAAK,QAAQC,KAAM6D,UC3D/B,IAAMsB,EAAcC,SAASC,eAAe,QAE5CC,OAAOC,UAAUzD,cAAgB,WAChC,OAAO0D,KAAKC,WAAW,IAAK,KAAK5D,QAAQ,oCAAqC,KAG/E6D,IAASjD,OACR,cAAC,aAAD,UACC,cAACiB,EAAD,MAEDyB,K","file":"static/js/main.f12e4601.chunk.js","sourcesContent":["import React from 'react';\r\nimport { QuestionGroup } from '..';\r\n\r\nimport './css/styles.css';\r\n\r\nfunction Column({ side, data }) {\r\n\treturn (\r\n\t\t<section className=\"column\">\r\n\t\t\t{data &&\r\n\t\t\t\tdata.groups[side].map((groupsElem, id) => {\r\n\t\t\t\t\tconst questions = data.questions.filter(elem => elem.groupId === groupsElem.id);\r\n\t\t\t\t\tif (questions.length > 0) {\r\n\t\t\t\t\t\treturn <QuestionGroup key={id} header={groupsElem.name} questions={questions} />;\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default Column;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport { Route, useLocation } from 'react-router-dom';\r\n\r\nimport './css/styles.css';\r\n\r\nfunction QuestionContent({ title, content, id }) {\r\n\tconst contentBox = useRef();\r\n\tconst [isUnFolded, setIsUnFolded] = useState(false);\r\n\r\n\tconst location = useLocation();\r\n\r\n\tconst showContent = url => {\r\n\t\tconst content = contentBox.current;\r\n\t\tcontent.style.height = content.scrollHeight + 'px';\r\n\t\turl.replace(`${id}_${title.friendlyfyUrl()}`);\r\n\t};\r\n\r\n\tconst hideContent = url => {\r\n\t\tconst content = contentBox.current;\r\n\t\tcontent.style.height = null;\r\n\t\turl.replace('/');\r\n\t};\r\n\r\n\tconst handleFold = url => {\r\n\t\tsetIsUnFolded(!isUnFolded);\r\n\t\t!isUnFolded ? showContent(url) : hideContent(url);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst pathname = location.pathname;\r\n\t\tconst separator = pathname.indexOf('_');\r\n\t\tconst questionId = pathname.slice(1, separator);\r\n\t\tconsole.log(questionId);\r\n\t\tif (questionId == id) {\r\n\t\t\tshowContent();\r\n\t\t\tsetIsUnFolded(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"question\">\r\n\t\t\t<Route\r\n\t\t\t\trender={({ history }) => (\r\n\t\t\t\t\t<div className=\"header\" onClick={() => handleFold(history)}>\r\n\t\t\t\t\t\t<h3>{title}</h3>\r\n\t\t\t\t\t\t<span className=\"material-icons-outlined\">{isUnFolded ? 'expand_less' : 'expand_more'}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"content\" ref={contentBox} dangerouslySetInnerHTML={{ __html: content }}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionContent;\r\n","import QuestionContent from './QuestionContent';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nfunction Question({ title, content, id }) {\r\n\treturn (\r\n\t\t<Router hashType={'noslash'}>\r\n\t\t\t<QuestionContent title={title} content={content} id={id} />\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default Question;\r\n","import React from 'react';\r\n\r\nimport { Question } from '..';\r\n\r\nimport './css/styles.css';\r\n\r\nfunction QuestionGroup({ header, questions }) {\r\n\treturn (\r\n\t\t<article className=\"box question-group\">\r\n\t\t\t{<h2>{header}</h2>}\r\n\t\t\t{questions.map((elem, id) => (\r\n\t\t\t\t<Question title={elem.title} key={id} content={elem.content} id={elem.id} />\r\n\t\t\t))}\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default QuestionGroup;\r\n","import React, { useRef } from 'react';\r\n\r\nimport './css/styles.css';\r\n\r\nfunction SearchInput({ onSearch, onReset }) {\r\n\tconst inputRef = useRef();\r\n\r\n\treturn (\r\n\t\t<div className=\"search-input\">\r\n\t\t\t<form onSubmit={event => onSearch(event, inputRef)}>\r\n\t\t\t\t<input ref={inputRef} type=\"text\" placeholder=\"search\" />\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<button className=\"buttons__btn buttons__btn--search\" type=\"submit\">\r\n\t\t\t\t\t\tSEARCH\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"buttons__btn buttons__btn--reset\" type=\"reset\" onClick={onReset}>\r\n\t\t\t\t\t\tRESET\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchInput;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './css/index.css';\r\n\r\nimport { Column, SearchInput } from './Components';\r\n\r\nexport default function App() {\r\n\tconst [rawData, setRawData] = useState();\r\n\tconst [filteredData, setFilteredData] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tgetFaqData();\r\n\t}, []);\r\n\r\n\tconst sortQuestions = data => {\r\n\t\t['left', 'right'].forEach(side => {\r\n\t\t\tdata.groups[side] = data.groups[side].sort((a, b) => {\r\n\t\t\t\treturn a.id - b.id;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t};\r\n\r\n\tconst getFaqData = () => {\r\n\t\tfetch('02-faq.json')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRawData(data);\r\n\t\t\t\tsetFilteredData(sortQuestions(data));\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleSearch = (event, inputRef) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst searchInput = inputRef.current.value.toLowerCase();\r\n\t\tconst searchWords = searchInput.split(' ');\r\n\t\tconst filteredQuestions = rawData.questions.filter(elem => {\r\n\t\t\tfor (let i = 0; i < searchWords.length; i++) {\r\n\t\t\t\tconsole.log(elem);\r\n\t\t\t\treturn elem.title.toLowerCase().includes(searchWords[i]) || elem.content.toLowerCase().includes(searchWords[i]);\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetFilteredData({ groups: rawData.groups, questions: filteredQuestions });\r\n\t};\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetFilteredData(sortQuestions(rawData));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"box\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t<a href=\"/Simplemining-recruitment-task-build/\">\r\n\t\t\t\t\t\t<span class=\"material-icons-outlined\">quiz</span>\r\n\t\t\t\t\t\t<span>FAQ</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<SearchInput onSearch={handleSearch} onReset={handleReset} />\r\n\t\t\t</header>\r\n\t\t\t<main className=\"columns\">\r\n\t\t\t\t<Column side=\"left\" data={filteredData} />\r\n\t\t\t\t<Column side=\"right\" data={filteredData} />\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nString.prototype.friendlyfyUrl = function () {\n\treturn this.replaceAll(' ', '-').replace(/[!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~]/g, '');\n};\n\nReactDOM.render(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}